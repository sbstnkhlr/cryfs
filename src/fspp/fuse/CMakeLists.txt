project (fspp-fuse)

set(SOURCES
  ../impl/FilesystemImpl.cpp
  ../impl/Profiler.cpp
  ../fuse/Fuse.cpp
)

add_library(${PROJECT_NAME} STATIC ${SOURCES})

target_compile_definitions(${PROJECT_NAME} PUBLIC _FILE_OFFSET_BITS=64)
target_link_libraries(${PROJECT_NAME} PUBLIC cpp-utils fspp-interface)

target_add_boost(${PROJECT_NAME} filesystem system thread chrono)
target_enable_style_warnings(${PROJECT_NAME})
target_activate_cpp14(${PROJECT_NAME})

if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
  target_include_directories(${PROJECT_NAME} PUBLIC "C:\\Program Files\\Dokan\\DokanLibrary-1.1.0\\include")
  target_link_libraries(${PROJECT_NAME} PUBLIC "C:\\Program Files\\Dokan\\DokanLibrary-1.1.0\\lib\\dokan1.lib")
  #target_link_libraries(${PROJECT_NAME} PUBLIC "C:\\Program Files\\Dokan\\DokanLibrary-1.1.0\\lib\\dokannp1.lib")
  target_link_libraries(${PROJECT_NAME} PUBLIC "C:\\Program Files\\Dokan\\DokanLibrary-1.1.0\\lib\\dokanfuse1.lib")
elseif(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
  set(CMAKE_FIND_FRAMEWORK LAST)
  find_library_with_path(FUSE "osxfuse" FUSE_LIB_PATH)
  target_link_libraries(${PROJECT_NAME} PUBLIC ${FUSE})
else() # Linux
  find_library_with_path(FUSE "fuse" FUSE_LIB_PATH)
  target_link_libraries(${PROJECT_NAME} PUBLIC ${FUSE})
endif()

